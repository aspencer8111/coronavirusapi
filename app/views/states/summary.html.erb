<script type="text/javascript">
  $(document).ready(function() {
    $('#fulltable').DataTable( { "paging": false, "searching": false, "order":[2, "desc"] });
  });
</script>
<p id="notice"><%= notice %></p>
<hr>
<h3> This page provides a record of official data from US government websites for the 50 states and DC.
	All data provided here are direct crawls of state government websites. These
	are the officially reported numbers. Unlike other coronavirus data sites, we do not rely on
	news or human crowd-sourced data. These are automatic captures of official state websites.
	The data captured will also be certified on the blockchain.
	(Websites crawled <%= ((Time.now-@timestamp)/360).round.to_f/10 %> hours ago)</h3>

<h3><a href="mailto:coronavirusapi@googlegroups.com">Contact</a> for more info, or if you want to contribute to the project.
</h3>

<h3>To donate crypto, see the donation addresses at the bottom of the page. Thanks!
</h3>

<p>
Official COVID-19 counts from government websites:
</p>

<table id="simpletable" class="pretty" border="1">
  <thead>
    <tr>
      <th>Tested</th>
      <th>Positive</th>
      <th>Deaths</th>
    </tr>
  </thead>
  <tbody>
      <tr>
        <td><%= number_with_delimiter(@tested) %></td>
        <td><%= number_with_delimiter(@positive) %></td>
        <td><%= number_with_delimiter(@deaths) %></td>
      </tr>
  </tbody>
</table>

<div class="container">
	<h5>Total number tested over time (note the spike was due to previous test numbers
		being available):</h5>
  <%= line_chart @chart_tested, curve: false, xtitle: "Date", points: false, thousands: "," %>
</div>
<div class="container">
  <h5>Total positive cases over time:</h5>
  <%= line_chart @chart_pos, curve: false, xtitle: "Date", points: false, thousands: ",", library: {spanGaps: false, elements: {line: {tension: 0}, point: {radius: 0}}, pointRadius: 10, legend: {position: 'right',}, scales: {yAxes: [{id: 'y-axis', type: 'logarithmic'},]}} %>
</div>
<div class="container">
  <h5>Total deaths over time:</h5>
  <%= line_chart @chart_deaths, curve: false, xtitle: "Date", points: false, thousands: ",", library: {spanGaps: false, elements: {line: {tension: 0}, point: {radius: 0}}, pointRadius: 10, legend: {position: 'right',}, scales: {yAxes: [{id: 'y-axis', type: 'logarithmic'},]}} %>
</div>

<div class="container">
  <h5>Cases in top states over time:</h5>
  <%= line_chart @chart_states, {thousands: ",", library: {spanGaps: false, elements: {line: {tension: 0}, point: {radius: 0}}, pointRadius: 10, legend: {position: 'right',}, scales: {yAxes: [{id: 'y-axis', type: 'logarithmic'},]}}} %>
</div>


<div class="container">
  <h5>Cases in top states normalized by population (1 million) over time:</h5>
  <%= line_chart @chart_states2, {thousands: ",", library: {elements: {line: {tension: 0}, point: {radius: 0}}, pointRadius: 0, legend: {position: 'right',}, scales: {yAxes: [{id: 'y-axis', type: 'logarithmic'},]}}} %>
</div>

<h4>Latest official data crawled for each state, click headers to sort:</h4>

<table id="fulltable" class="table table-sm table-bordered table-striped">
  <thead>
    <tr>
      <th>Name</th>
      <th>Tested</th>
      <th>Positive</th>
      <th>Deaths</th>
      <th>Tested<br/>/1M People</th>
      <th>Positive<br/>/Tested %</th>
      <th>Deaths<br/>/Positive %</th>
<th>Source</th>
<th>Last update<br/>(hours ago)</th>
    </tr>
  </thead>

  <tbody>

    <% @tested_arr.each do |state_name, tested| %>
      <tr>
	<td><a href="<%= "/state/#{state_name}" %>"><%= state_name %></a></td>
        <td><%= tested %> <%= "(#{@h_tested_unofficial[state_name]})" if false && @h_tested_unofficial[state_name].to_i > tested.to_i %> </td>
        <td><%= @h_positive[state_name] %> <%= "(#{@h_positive_unofficial[state_name]})" if false && @h_positive_unofficial[state_name].to_i > @h_positive[state_name].to_i %></td>
        <td><%= @h_deaths[state_name] %> <%= "(#{@h_deaths_unofficial[state_name]})" if false && @h_deaths_unofficial[state_name].to_i > @h_deaths[state_name].to_i %> </td>
        <td><%= (tested.to_f/@population[state_name]*1000000).round %>
<%= "(#{(@h_tested_unofficial[state_name].to_f/@population[state_name]*1000000).round})" if false && @h_tested_unofficial[state_name].to_i > tested.to_i %>
</td>
        <td><%= (@h_positive[state_name].to_f/tested.to_f*1000).round.to_f/10 rescue 'N\A' %></td>
        <td><%= (@h_deaths[state_name].to_f/@h_positive[state_name].to_f*1000).round.to_f/10 rescue 'N\A' %></td>
        <td><a href="<%= @url[state_name] %>"><%= state_name %></a></td>
	<td><%= "#{((Time.now.to_i-@updated_at[state_name])/360).round.to_f/10}" %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<h4>Download:</h4>
<a href="/states.csv">Official state data in csv format</a>
<br>
<a href="/time_series.csv">Time series in csv format</a>

<h4>Api:</h4>
To get the time series for a given state, use http://coronavirusapi.com/getTimeSeries/[2 letter state abbreviation]

<h4>Donate:</h4>
<p>
BTC: 1LG9dUf39dCKAEFcKm6guNhadTJwNqj44J
</p><p>
BCH: qrf504gk8n6sujjegwastxqdz2lv5vlv65pxs03s7k
</p><p>
ETH: 0x549ffFB83ac67Ca1Ae47668ac3cAAE3e0c77a9bd
</p><p>
XLM: GCVRV67LBHTMVXKDAJSW3S3ASASI6EJWQU2LYEOGKPSJEY42PYRAUDME
</p><p>
VET: 0xa81cd7a8272E053A18a13459425FFd260105EDd9
</p>
